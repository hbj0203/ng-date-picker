{"version":3,"names":[],"mappings":"","sources":["scripts/ngDatetimeRangePicker.js"],"sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* global moment:false */\n\t'use strict';\n\n\tvar _directivesNgTimePickerNgTimePickerDirective = __webpack_require__(1);\n\n\tvar _directivesNgCalendarPickerNgCalendarPickerDirective = __webpack_require__(2);\n\n\tvar _directivesNgDatePickerNgDatePickerDirective = __webpack_require__(3);\n\n\tangular.module('ngDatetimeRangePicker', []).constant('moment', moment).directive('ngTimePicker', _directivesNgTimePickerNgTimePickerDirective.NgTimePicker).directive('ngCalendarPicker', _directivesNgCalendarPickerNgCalendarPickerDirective.NgCalendarPicker).directive('ngDatePicker', _directivesNgDatePickerNgDatePickerDirective.NgDatePicker);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\texports.NgTimePicker = NgTimePicker;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction NgTimePicker() {\n\t    'ngInject';\n\n\t    var directive = {\n\t        restrict: 'E',\n\t        scope: {\n\t            value: '='\n\t        },\n\t        controller: NgTimePickerController,\n\t        controllerAs: 'vmTp',\n\t        templateUrl: 'app/directives/ng-time-picker/ng-time-picker.html',\n\t        link: function link(scope, elem, attrs, ctrl) {\n\t            ctrl.init();\n\t        }\n\t    };\n\n\t    return directive;\n\t}\n\n\tvar NgTimePickerController = (function () {\n\t    NgTimePickerController.$inject = [\"$document\", \"$element\", \"$scope\", \"moment\"];\n\t    function NgTimePickerController($document, $element, $scope, moment) {\n\t        'ngInject';\n\n\t        _classCallCheck(this, NgTimePickerController);\n\n\t        this.Document = $document;\n\t        this.Element = $element;\n\t        this.Scope = $scope;\n\t        this.Moment = moment;\n\t    }\n\n\t    _createClass(NgTimePickerController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var cls = ['.w-hour-scroll', '.w-min-scroll', '.w-sec-scroll'];\n\t            var element = this.Element[0];\n\t            this.scrollDom = [element.querySelector(cls[0]), element.querySelector(cls[1]), element.querySelector(cls[2])];\n\t            this.setStaticConf();\n\t            this.setViewDisplay();\n\t            this.setViewMethods();\n\t            this.setWatchers();\n\t        }\n\t    }, {\n\t        key: 'setStaticConf',\n\t        value: function setStaticConf() {\n\t            // 时分秒配置\n\t            this.hourConf = this._getSerialNums(0, 24);\n\t            this.minConf = this._getSerialNums(0, 60);\n\t            this.secConf = this._getSerialNums(0, 60);\n\t        }\n\t    }, {\n\t        key: 'setWatchers',\n\t        value: function setWatchers() {\n\t            var _this = this;\n\n\t            this.Scope.$watch('value', function () {\n\t                _this.setViewDisplay();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'setViewDisplay',\n\t        value: function setViewDisplay() {\n\t            var value = this.Scope.value;\n\t            var moment = this.Moment;\n\t            var m = moment();\n\t            this.yearNow = value ? value.year() : m.year();\n\t            this.monthNow = value ? value.month() : m.month();\n\t            this.hrNow = value ? value.hours() : '';\n\t            this.minNow = value ? value.minutes() : '';\n\t            this.secNow = value ? value.seconds() : '';\n\t            // this._scrollToPos('h', this.hrNow);\n\t            // this._scrollToPos('m', this.minNow);\n\t            // this._scrollToPos('s', this.secNow);\n\t        }\n\t    }, {\n\t        key: 'setViewMethods',\n\t        value: function setViewMethods() {\n\t            var vmTp = this;\n\t            var moment = this.Moment;\n\t            this.viewMethods = {\n\t                selectTime: function selectTime(which, index) {\n\t                    var date = undefined;\n\t                    var value = vmTp.Scope.value;\n\t                    if (value == '') value = moment().hour(0).minute(0).second(0);\n\t                    switch (which) {\n\t                        case 'h':\n\t                            date = value.hour(index);\n\t                            break;\n\t                        case 'm':\n\t                            date = value.minute(index);\n\t                            break;\n\t                        case 's':\n\t                            date = value.second(index);\n\t                            break;\n\t                    }\n\t                    vmTp.Scope.value = date;\n\t                    vmTp.setViewDisplay();\n\t                }\n\t            };\n\t        }\n\t    }, {\n\t        key: '_getSerialNums',\n\t        value: function _getSerialNums() {\n\t            var begin = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t            var end = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t            var fillZero = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\n\t            var serialSet = [],\n\t                mem = '';\n\t            for (var i = begin; i < end; i++) {\n\t                mem = String(i);\n\t                if (fillZero) {\n\t                    serialSet.push(mem.length > 1 ? mem : '0' + mem);\n\t                } else {\n\t                    serialSet.push(mem);\n\t                }\n\t            }\n\t            return serialSet;\n\t        }\n\n\t        // 时分秒滚动到指定位置\n\t    }, {\n\t        key: '_scrollToPos',\n\t        value: function _scrollToPos(target, time) {\n\t            var height = 24;\n\t            var index = parseInt(time);\n\n\t            switch (target) {\n\t                case 'h':\n\t                    this.scrollDom[0].scrollTop = height * index;\n\t                    break;\n\t                case 'm':\n\t                    this.scrollDom[1].scrollTop = height * index;\n\t                    break;\n\t                case 's':\n\t                    this.scrollDom[2].scrollTop = height * index;\n\t                    break;\n\t            }\n\t        }\n\t    }]);\n\n\t    return NgTimePickerController;\n\t})();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\texports.NgCalendarPicker = NgCalendarPicker;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction NgCalendarPicker() {\n\t    'ngInject';\n\n\t    var directive = {\n\t        restrict: 'E',\n\t        scope: {\n\t            value: '='\n\t        },\n\t        controller: NgCalendarPickerController,\n\t        controllerAs: 'vmCp',\n\t        templateUrl: 'app/directives/ng-calendar-picker/ng-calendar-picker.html',\n\t        link: function link(scope, elem, attrs, ctrl) {\n\t            ctrl.init();\n\t        }\n\t    };\n\n\t    return directive;\n\t}\n\n\tvar NgCalendarPickerController = (function () {\n\t    NgCalendarPickerController.$inject = [\"$document\", \"$element\", \"$scope\", \"moment\"];\n\t    function NgCalendarPickerController($document, $element, $scope, moment) {\n\t        'ngInject';\n\n\t        _classCallCheck(this, NgCalendarPickerController);\n\n\t        this.Document = $document;\n\t        this.Element = $element;\n\t        this.Scope = $scope;\n\t        this.Moment = moment;\n\t    }\n\n\t    _createClass(NgCalendarPickerController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.hasVal = !(this.Scope.value.start == '' || this.Scope.value.end == '');\n\t            this.setStaticConf();\n\t            this.setConf();\n\t            this.setViewMethods();\n\t            this.setWatchers();\n\t        }\n\t    }, {\n\t        key: 'setStaticConf',\n\t        value: function setStaticConf() {\n\t            var moment = this.Moment;\n\t            this.panel = {\n\t                left: 'date',\n\t                right: 'date'\n\t            };\n\t            this.weekConf = ['日', '一', '二', '三', '四', '五', '六'];\n\t            this.monthConf = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'];\n\t            // 根据当前年进行初始配置\n\t            var value = this.Scope.value;\n\t            var nsYear = undefined,\n\t                neYear = undefined;\n\t            // console.log('HAS VAL: ', this.hasVal)\n\t            if (this.hasVal) {\n\t                nsYear = value.start.year();\n\t                neYear = value.end.year();\n\t            } else {\n\t                var y = moment().year();\n\t                nsYear = neYear = y;\n\t            }\n\n\t            this.nsYearConf = this._getRangeYears(nsYear);\n\t            this.neYearConf = this._getRangeYears(neYear);\n\t        }\n\t    }, {\n\t        key: 'setConf',\n\t        value: function setConf() {\n\t            var moment = this.Moment;\n\t            var Scope = this.Scope;\n\t            var start = Scope.value.start;\n\t            var end = Scope.value.end;\n\t            this.hasVal = !(start == '' || end == '');\n\n\t            if (this.hasVal) {\n\t                this.start = {\n\t                    start: start,\n\t                    year: start.year(),\n\t                    month: start.month(),\n\t                    date: start.date()\n\t                };\n\n\t                this.end = {\n\t                    end: end,\n\t                    year: end.year(),\n\t                    month: end.month(),\n\t                    date: end.date()\n\t                };\n\t            } else {\n\t                var m = moment();\n\t                this.start = this.end = {\n\t                    year: m.year(),\n\t                    month: m.month(),\n\t                    date: m.date(),\n\t                    disabled: true\n\t                };\n\t            }\n\n\t            this.dateConf = {\n\t                left: this._getRangeDates(this.start),\n\t                right: this._getRangeDates(this.end)\n\t            };\n\t        }\n\t    }, {\n\t        key: 'setWatchers',\n\t        value: function setWatchers() {\n\t            var _this = this;\n\n\t            this.Scope.$watch('value', function (v) {\n\t                // 左值永远小于等于右值，否则交替\n\t                if (v.start.valueOf() >= v.end.valueOf()) {\n\t                    var _ref = [_this.Scope.value.end, _this.Scope.value.start];\n\t                    _this.Scope.value.start = _ref[0];\n\t                    _this.Scope.value.end = _ref[1];\n\t                }\n\t                _this.setConf();\n\t            }, true);\n\t        }\n\t    }, {\n\t        key: 'setViewMethods',\n\t        value: function setViewMethods() {\n\t            var moment = this.Moment;\n\t            var vmCp = this;\n\n\t            // 倘若无值，则点击时自动选当前日期\n\t            function autoValue() {\n\t                if (!vmCp.hasVal) {\n\t                    vmCp.Scope.value.start = moment();\n\t                    vmCp.Scope.value.end = moment();\n\t                }\n\t            }\n\t            this.viewMethods = {\n\t                selectPanel: function selectPanel(which, name) {\n\t                    vmCp.panel[which] = name;\n\t                },\n\t                selectDate: function selectDate(which, d) {\n\t                    autoValue();\n\t                    // 当前月\n\t                    if (d.at) {\n\t                        vmCp.Scope.value[which].date(d.n);\n\t                        // 若在单个日历范围内已经选择值，则有可能是用户在单个日历中选择范围\n\t                        vmCp.dateConf = {\n\t                            left: vmCp._getRangeDates(vmCp.start),\n\t                            right: vmCp._getRangeDates(vmCp.end)\n\t                        };\n\t                    }\n\t                },\n\t                selectMonth: function selectMonth(which, index) {\n\t                    autoValue();\n\t                    vmCp.Scope.value[which].month(index);\n\t                    vmCp.setConf();\n\t                    vmCp.panel[which === 'start' ? 'left' : 'right'] = 'date';\n\t                },\n\t                selectYear: function selectYear(which, index) {\n\t                    autoValue();\n\t                    vmCp.Scope.value[which].year(index);\n\t                    vmCp.setConf();\n\t                    vmCp.panel[which === 'start' ? 'left' : 'right'] = 'month';\n\t                },\n\t                rangeYear: function rangeYear(which, dir) {\n\t                    if (which === 'left') {\n\t                        var pos = vmCp.nsYearConf[4];\n\t                        if (dir === 'prev') {\n\t                            vmCp.nsYearConf = vmCp._getRangeYears(pos - 12);\n\t                        } else {\n\t                            vmCp.nsYearConf = vmCp._getRangeYears(pos + 12);\n\t                        }\n\t                    } else {\n\t                        var pos = vmCp.neYearConf[4];\n\t                        if (dir === 'prev') {\n\t                            vmCp.neYearConf = vmCp._getRangeYears(pos - 12);\n\t                        } else {\n\t                            vmCp.neYearConf = vmCp._getRangeYears(pos + 12);\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t        }\n\t    }, {\n\t        key: '_getRangeYears',\n\t        value: function _getRangeYears(now) {\n\t            var serialAry = [];\n\t            for (var i = now - 4; i < now + 8; i++) {\n\t                serialAry.push(i);\n\t            }\n\t            return serialAry;\n\t        }\n\t    }, {\n\t        key: '_getRangeDates',\n\t        value: function _getRangeDates(now) {\n\t            var vmCp = this;\n\t            var moment = this.Moment;\n\t            var cells = [];\n\t            var gridNum = 42;\n\t            var atStart = moment([now.year, now.month]);\n\t            var atEnd = moment(atStart).endOf('month');\n\t            var prevStart = moment([now.year, now.month - 1]);\n\t            var prevEnd = moment(prevStart).endOf('month');\n\n\t            // 生成42个网格所需要对应的信息\n\t            var base = {\n\t                at: {\n\t                    atStart: atStart,\n\t                    atEnd: atEnd,\n\t                    atEndDate: atEnd.date(),\n\t                    atStartDay: atStart.day(),\n\t                    atEndDay: atEnd.day()\n\t                },\n\t                prev: {\n\t                    prevStart: prevStart,\n\t                    prevEnd: prevEnd,\n\t                    prevEndDate: prevEnd.date(),\n\t                    prevStartDay: prevStart.day(),\n\t                    prevEndDay: prevEnd.day()\n\t                }\n\t            };\n\n\t            var selectedCnt = 0;\n\t            for (var d = 0, atD = 1, nextD = 1; d < gridNum; d++) {\n\t                if (d < base.at.atStartDay) {\n\t                    // 上一个月\n\t                    var n = base.prev.prevEndDate - (base.at.atStartDay - d) + 1;\n\t                    cells.push({\n\t                        prev: true,\n\t                        n: n\n\t                    });\n\t                } else if (d > base.at.atEndDate + base.at.atStartDay - 1) {\n\t                    // 下一个月\n\t                    cells.push({\n\t                        next: true,\n\t                        n: nextD++\n\t                    });\n\t                } else {\n\t                    if (vmCp.hasVal) {\n\t                        (function () {\n\t                            // 当前月\n\t                            var _atD = atD++;\n\t                            // 选择值\n\t                            var selected = (function () {\n\t                                if (now.year === vmCp.start.year && now.month === vmCp.start.month && _atD === vmCp.start.date || now.year === vmCp.end.year && now.month === vmCp.end.month && _atD === vmCp.end.date) {\n\t                                    selectedCnt++;\n\t                                    return true;\n\t                                } else {\n\t                                    return false;\n\t                                }\n\t                            })();\n\t                            // 视觉上禁止，如左面板只能选择左值\n\t                            var forbidden = (function () {\n\t                                var sign = Object.keys(now)[0];\n\t                                return selected && (sign === 'start' && selectedCnt !== 1 || sign === 'end' && selectedCnt !== 2);\n\t                            })();\n\t                            // 日期在范围之中\n\t                            var inRange = (function () {\n\t                                var _now = moment([now.year, now.month]).date(_atD).valueOf();\n\t                                var _start = vmCp.Scope.value.start;\n\t                                var _end = vmCp.Scope.value.end;\n\t                                var from = moment([_start.year(), _start.month(), _start.date()]).endOf('day').valueOf();\n\t                                var to = moment([_end.year(), _end.month(), _end.date()]).startOf('day').valueOf();\n\n\t                                return _now > from && _now < to;\n\t                            })();\n\n\t                            cells.push({\n\t                                at: true,\n\t                                n: _atD,\n\t                                selected: selected,\n\t                                forbidden: forbidden,\n\t                                inRange: inRange\n\t                            });\n\t                        })();\n\t                    } else {\n\t                        var _atD = atD++;\n\t                        cells.push({\n\t                            at: true,\n\t                            n: _atD\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t            // 如单个面板只存在一个值，取消禁止\n\t            if (selectedCnt === 1) {\n\t                cells.forEach(function (cell) {\n\t                    cell.forbidden = false;\n\t                });\n\t            }\n\n\t            return cells;\n\t        }\n\t    }]);\n\n\t    return NgCalendarPickerController;\n\t})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\texports.NgDatePicker = NgDatePicker;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction NgDatePicker() {\n\t    'ngInject';\n\n\t    var directive = {\n\t        restrict: 'E',\n\t        scope: {\n\t            value: '=',\n\t            format: '@',\n\t            placeholder: '@',\n\t            options: '=',\n\t            clearable: '=',\n\t            readonly: '=',\n\t            onOk: '&',\n\t            onClear: '&',\n\t            onChange: '&',\n\t            isGlobal: '='\n\t        },\n\t        controller: NgDatePickerController,\n\t        controllerAs: 'vmDp',\n\t        templateUrl: 'app/directives/ng-date-picker/ng-date-picker.html',\n\t        link: function link(scope, elem, attrs, ctrl) {\n\t            scope.pos = attrs.pos;\n\t            ctrl.init();\n\t        }\n\t    };\n\n\t    return directive;\n\t}\n\n\tvar NgDatePickerController = (function () {\n\t    NgDatePickerController.$inject = [\"$window\", \"$document\", \"$element\", \"$scope\", \"$timeout\", \"moment\"];\n\t    function NgDatePickerController($window, $document, $element, $scope, $timeout, moment) {\n\t        'ngInject';\n\n\t        _classCallCheck(this, NgDatePickerController);\n\n\t        this.Window = $window;\n\t        this.Document = $document;\n\t        this.Element = $element;\n\t        this.Scope = $scope;\n\t        this.Timeout = $timeout;\n\t        this.Moment = moment;\n\t    }\n\n\t    _createClass(NgDatePickerController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\n\t            this.setStaticConf();\n\t            this.setConf();\n\t            this.setViewMethods();\n\t            this.setWatchers();\n\t            this.CloneOutside = false;\n\t            this.Scope.$on('$destroy', function () {\n\t                _this.removeDynamicPanel();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'setStaticConf',\n\t        value: function setStaticConf() {\n\t            var Scope = this.Scope;\n\t            this.format = Scope.format || 'YYYY-MM-DD HH:mm:ss';\n\t            this.value = Scope.value;\n\t            this.options = Scope.options;\n\t            this.placeholder = Scope.placeholder || '请选择日期时间范围';\n\t            this.formatVal = '';\n\t            this.isOpened = false;\n\t            this.SCOPE_ID = Math.round(Math.random() * 1e9);\n\t        }\n\t    }, {\n\t        key: 'setConf',\n\t        value: function setConf() {\n\t            this.views = 'calendar';\n\t            // 如果左值大于右值，则应该进行交换\n\t            var start = this.Scope.value.start.valueOf();\n\t            var end = this.Scope.value.end.valueOf();\n\t            if (start > end) {\n\t                var _ref = [this.Scope.value.end, this.Scope.value.start];\n\t                this.Scope.value.start = _ref[0];\n\t                this.Scope.value.end = _ref[1];\n\t            }\n\t        }\n\n\t        // 设置动态全局插入Panel\n\t    }, {\n\t        key: 'setDynamicPanel',\n\t        value: function setDynamicPanel(afterThat) {\n\t            var isGlobal = this.Scope.isGlobal;\n\t            var posAttr = this.Scope.pos;\n\t            if (isGlobal) {\n\t                var el = this.Element;\n\t                var pos = this._getPickerPos(el[0]);\n\t                var docBody = this.Document.find('body');\n\t                var dropdown = this.Document[0].getElementById('ng-picker-to-clone__' + this.SCOPE_ID);\n\t                var dropdownMask = this.Document[0].getElementById('ng-mask-to-clone__' + this.SCOPE_ID);\n\t                docBody.append(dropdown);\n\t                docBody.append(dropdownMask);\n\t                this.CloneOutside = true;\n\t                var inputWidth = pos.width;\n\t                var inputHeight = pos.height;\n\t                var panelWidth = 530;\n\t                var baseLeft = pos.left;\n\t                var baseTop = pos.top;\n\n\t                var marginTop = 4;\n\n\t                dropdown.style.top = baseTop + 'px';\n\t                switch (posAttr) {\n\t                    case 'center':\n\t                        dropdown.style.left = baseLeft - (panelWidth - inputWidth) / 2 + 'px';\n\t                        break;\n\t                    case 'right':\n\t                        dropdown.style.left = baseLeft - (panelWidth - inputWidth) + 'px';\n\t                        break;\n\t                    case 'cover':\n\t                    case 'cover-left':\n\t                        dropdown.style.top = baseTop - inputHeight - marginTop + 'px';\n\t                        dropdown.style.left = baseLeft + 'px';\n\t                        break;\n\t                    case 'cover-center':\n\t                        dropdown.style.top = baseTop - inputHeight - marginTop + 'px';\n\t                        dropdown.style.left = baseLeft - (panelWidth - inputWidth) / 2 + 'px';\n\t                        break;\n\t                    case 'cover-right':\n\t                        dropdown.style.top = baseTop - inputHeight - marginTop + 'px';\n\t                        dropdown.style.left = baseLeft - (panelWidth - inputWidth) + 'px';\n\t                        break;\n\t                    default:\n\t                        dropdown.style.left = baseLeft + 'px';\n\t                        break;\n\t                }\n\t                afterThat && afterThat();\n\t            }\n\t        }\n\n\t        // 销毁Panel\n\t    }, {\n\t        key: 'removeDynamicPanel',\n\t        value: function removeDynamicPanel(afterThat) {\n\t            var _this2 = this;\n\n\t            var isGlobal = this.Scope.isGlobal;\n\t            var Timeout = this.Timeout;\n\t            if (isGlobal && this.CloneOutside) {\n\t                (function () {\n\t                    var docBody = _this2.Document.find('body')[0];\n\t                    var dropdown = _this2.Document[0].getElementById('ng-picker-to-clone__' + _this2.SCOPE_ID);\n\t                    var dropdownMask = _this2.Document[0].getElementById('ng-mask-to-clone__' + _this2.SCOPE_ID);\n\t                    Timeout(function () {\n\n\t                        if (dropdown) {\n\t                            docBody.removeChild(dropdown);\n\t                        }\n\t                        if (dropdownMask) {\n\t                            docBody.removeChild(dropdownMask);\n\t                        }\n\t                    }, 200);\n\t                })();\n\t            }\n\t            afterThat && afterThat();\n\t        }\n\t    }, {\n\t        key: 'setWatchers',\n\t        value: function setWatchers() {\n\t            var _this3 = this;\n\n\t            var moment = this.Moment;\n\t            this.Scope.$watch('value', function (v) {\n\t                if (v.start == '' && v.end != '') {\n\t                    v.start = moment(v.end).hour(0).minute(0).second(0);\n\t                }\n\t                if (v.start != '' && v.end == '') {\n\t                    v.end = moment(v.start).hour(0).minute(0).second(0);\n\t                }\n\t                _this3.Scope.onChange({\n\t                    value: {\n\t                        start: v.start.valueOf(),\n\t                        end: v.end.valueOf()\n\t                    }\n\t                });\n\t                _this3.setFormatVal(v.start, v.end, _this3.format);\n\t            }, true);\n\t        }\n\t    }, {\n\t        key: 'setFormatVal',\n\t        value: function setFormatVal(start, end, format) {\n\t            var formatStr = '';\n\t            if (start == '' || end == '') {\n\t                formatStr = '';\n\t            } else {\n\t                formatStr = start.format(format) + ' - ' + end.format(format);\n\t            }\n\t            this.formatVal = formatStr;\n\t        }\n\t    }, {\n\t        key: 'setViewMethods',\n\t        value: function setViewMethods() {\n\t            var vmDp = this;\n\t            this.viewMethods = {\n\t                togglePicker: function togglePicker(open) {\n\t                    if (open) {\n\t                        vmDp.setDynamicPanel(function () {\n\t                            vmDp.Timeout(function () {\n\t                                vmDp.isOpened = open;\n\t                            }, 0);\n\t                        });\n\t                    } else {\n\t                        vmDp.isOpened = open;\n\t                    }\n\t                },\n\t                selectOption: function selectOption(conf) {\n\t                    var start = conf.start;\n\t                    var end = conf.end;\n\n\t                    vmDp.value = vmDp.Scope.value = {\n\t                        start: start,\n\t                        end: end\n\t                    };\n\t                    vmDp.setConf();\n\t                    vmDp.isOpened = false;\n\t                },\n\t                selectView: function selectView(which) {\n\t                    vmDp.views = which;\n\t                },\n\t                clearValue: function clearValue() {\n\t                    vmDp.Scope.onClear();\n\t                    vmDp.Scope.value = vmDp.value = {\n\t                        start: '',\n\t                        end: ''\n\t                    };\n\t                },\n\t                doneValue: function doneValue() {\n\t                    var v = vmDp.Scope.value;\n\t                    vmDp.Scope.onOk({\n\t                        value: {\n\t                            start: v.start.valueOf(),\n\t                            end: v.end.valueOf()\n\t                        }\n\t                    });\n\t                    this.togglePicker(false);\n\t                }\n\t            };\n\t        }\n\t    }, {\n\t        key: '_getPickerPos',\n\t        value: function _getPickerPos(target) {\n\t            var rect = target.getBoundingClientRect();\n\t            var ww = this.Window.innerWidth;\n\n\t            return {\n\t                top: rect.top + rect.height,\n\t                right: ww - (rect.left + rect.width),\n\t                left: rect.left,\n\t                width: rect.width,\n\t                height: rect.height\n\t            };\n\t        }\n\t    }]);\n\n\t    return NgDatePickerController;\n\t})();\n\n/***/ })\n/******/ ]);\nangular.module(\"ngDatetimeRangePicker\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/directives/ng-calendar-picker/ng-calendar-picker.html\",\"<div class=\\\"ng-calendar-container\\\"><div class=\\\"w-calendar-header\\\"><span class=\\\"btn-prev-year\\\" ng-show=\\\"vmCp.panel.left === \\'year\\'\\\" ng-click=\\\"vmCp.viewMethods.rangeYear(\\'left\\', \\'prev\\')\\\">◤</span> <span class=\\\"u-btn-year\\\" ng-click=\\\"vmCp.viewMethods.selectPanel(\\'left\\', \\'year\\')\\\">{{vmCp.start.year}}年</span> <span class=\\\"u-btn-month\\\" ng-click=\\\"vmCp.viewMethods.selectPanel(\\'left\\', \\'month\\')\\\">{{vmCp.start.month + 1}}月</span> <span class=\\\"btn-next-year\\\" ng-show=\\\"vmCp.panel.left === \\'year\\'\\\" ng-click=\\\"vmCp.viewMethods.rangeYear(\\'left\\', \\'next\\')\\\">◥</span></div><div class=\\\"w-calendar-body\\\"><div ng-show=\\\"vmCp.panel.left === \\'year\\'\\\" class=\\\"panel panel-choose-year\\\"><div class=\\\"u-cell-year\\\" ng-repeat=\\\"conf in vmCp.nsYearConf\\\" ng-class=\\\"{\\'selected\\': !vmCp.start.disabled && vmCp.start.year === conf}\\\"><span ng-click=\\\"vmCp.viewMethods.selectYear(\\'start\\', conf)\\\">{{conf}}</span></div></div><div ng-show=\\\"vmCp.panel.left === \\'month\\'\\\" class=\\\"panel panel-choose-month\\\"><div class=\\\"u-cell-month\\\" ng-repeat=\\\"conf in vmCp.monthConf\\\" ng-class=\\\"{\\'selected\\': !vmCp.start.disabled && vmCp.start.month === $index}\\\"><span ng-click=\\\"vmCp.viewMethods.selectMonth(\\'start\\', $index)\\\">{{conf}}</span></div></div><div ng-show=\\\"vmCp.panel.left === \\'date\\'\\\" class=\\\"panel panel-choose-date\\\"><div class=\\\"u-cell-date-header\\\"><span ng-repeat=\\\"conf in vmCp.weekConf\\\">{{conf}}</span></div><div class=\\\"u-cell-date\\\" ng-repeat=\\\"conf in vmCp.dateConf.left\\\" ng-class=\\\"{\\'disabled\\': !conf.at, \\'selected\\': conf.selected, \\'forbidden\\': conf.forbidden, \\'range\\': conf.inRange}\\\"><span ng-click=\\\"vmCp.viewMethods.selectDate(\\'start\\', conf)\\\">{{conf.n}}</span></div></div></div></div><div class=\\\"ng-calendar-container\\\"><div class=\\\"w-calendar-header\\\"><span class=\\\"btn-prev-year\\\" ng-show=\\\"vmCp.panel.right === \\'year\\'\\\" ng-click=\\\"vmCp.viewMethods.rangeYear(\\'right\\', \\'prev\\')\\\">◤</span> <span class=\\\"u-btn-year\\\" ng-click=\\\"vmCp.viewMethods.selectPanel(\\'right\\', \\'year\\')\\\">{{vmCp.end.year}}年</span> <span class=\\\"u-btn-month\\\" ng-click=\\\"vmCp.viewMethods.selectPanel(\\'right\\', \\'month\\')\\\">{{vmCp.end.month + 1}}月</span> <span class=\\\"btn-next-year\\\" ng-show=\\\"vmCp.panel.right === \\'year\\'\\\" ng-click=\\\"vmCp.viewMethods.rangeYear(\\'right\\', \\'next\\')\\\">◥</span></div><div class=\\\"w-calendar-body\\\"><div ng-show=\\\"vmCp.panel.right === \\'year\\'\\\" class=\\\"panel panel-choose-year\\\"><div class=\\\"u-cell-year\\\" ng-repeat=\\\"conf in vmCp.neYearConf\\\" ng-class=\\\"{\\'selected\\': !vmCp.end.disabled && vmCp.end.year === conf}\\\"><span ng-click=\\\"vmCp.viewMethods.selectYear(\\'end\\', conf)\\\">{{conf}}</span></div></div><div ng-show=\\\"vmCp.panel.right === \\'month\\'\\\" class=\\\"panel panel-choose-month\\\"><div class=\\\"u-cell-month\\\" ng-repeat=\\\"conf in vmCp.monthConf\\\" ng-class=\\\"{\\'selected\\': !vmCp.end.disabled && vmCp.end.month === $index}\\\"><span ng-click=\\\"vmCp.viewMethods.selectMonth(\\'end\\', $index)\\\">{{conf}}</span></div></div><div ng-show=\\\"vmCp.panel.right === \\'date\\'\\\" class=\\\"panel panel-choose-date\\\"><div class=\\\"u-cell-date-header\\\"><span ng-repeat=\\\"conf in vmCp.weekConf\\\">{{conf}}</span></div><div class=\\\"u-cell-date\\\" ng-repeat=\\\"conf in vmCp.dateConf.right\\\" ng-class=\\\"{\\'disabled\\': !conf.at, \\'selected\\': conf.selected, \\'forbidden\\': conf.forbidden, \\'range\\': conf.inRange}\\\"><span ng-click=\\\"vmCp.viewMethods.selectDate(\\'end\\', conf)\\\">{{conf.n}}</span></div></div></div></div>\");\n$templateCache.put(\"app/directives/ng-date-picker/ng-date-picker.html\",\"<div class=\\\"ng-date-picker-container\\\"><div class=\\\"m-picker-input\\\"><input class=\\\"w-picker-input\\\" type=\\\"text\\\" name=\\\"ng-picker-input\\\" ng-model=\\\"vmDp.formatVal\\\" placeholder=\\\"{{vmDp.placeholder}}\\\" ng-click=\\\"vmDp.viewMethods.togglePicker(true)\\\"></div><div id=\\\"ng-picker-to-clone__{{vmDp.SCOPE_ID}}\\\" class=\\\"m-picker-dropdown\\\" ng-class=\\\"{\\'transition-show\\': vmDp.isOpened, \\'no-options\\': !vmDp.options}\\\"><div class=\\\"w-picker-conf\\\"><span class=\\\"config-item\\\" ng-repeat=\\\"conf in vmDp.options\\\" ng-click=\\\"vmDp.viewMethods.selectOption(conf)\\\">{{conf.name}}</span></div><div class=\\\"w-picker-time-panel\\\" ng-show=\\\"vmDp.views === \\'time\\'\\\"><div class=\\\"panel-left\\\"><ng-time-picker value=\\\"vmDp.value.start\\\"></ng-time-picker></div><span class=\\\"u-divide-panel\\\"></span><div class=\\\"panel-right\\\"><ng-time-picker value=\\\"vmDp.value.end\\\"></ng-time-picker></div></div><div class=\\\"w-picker-calendar-panel\\\" ng-show=\\\"vmDp.views === \\'calendar\\'\\\"><ng-calendar-picker value=\\\"vmDp.value\\\"></ng-calendar-picker></div><div class=\\\"w-picker-option\\\"><span class=\\\"btn-opt-view\\\" ng-show=\\\"vmDp.views === \\'calendar\\'\\\" ng-click=\\\"vmDp.viewMethods.selectView(\\'time\\')\\\">选择时间</span> <span class=\\\"btn-opt-view\\\" ng-show=\\\"vmDp.views === \\'time\\'\\\" ng-click=\\\"vmDp.viewMethods.selectView(\\'calendar\\')\\\">选择日期</span> <span class=\\\"btn-opt-clear\\\" ng-click=\\\"vmDp.viewMethods.clearValue()\\\">清空</span> <span class=\\\"btn-opt-done\\\" ng-click=\\\"vmDp.viewMethods.doneValue()\\\">确定</span></div></div></div><div id=\\\"ng-mask-to-clone__{{vmDp.SCOPE_ID}}\\\" class=\\\"m-picker-mask\\\" ng-show=\\\"vmDp.isOpened\\\" ng-click=\\\"vmDp.viewMethods.togglePicker(false)\\\"></div>\");\n$templateCache.put(\"app/directives/ng-time-picker/ng-time-picker.html\",\"<div class=\\\"ng-time-container\\\"><div class=\\\"w-time-header\\\"><span>{{vmTp.yearNow}}年</span> <span>{{vmTp.monthNow + 1}}月</span></div><div class=\\\"w-scroll w-hour-scroll\\\"><span class=\\\"u-time-cell\\\" ng-repeat=\\\"h in vmTp.hourConf\\\" ng-class=\\\"{\\'selected\\': vmTp.hrNow == $index}\\\" ng-click=\\\"vmTp.viewMethods.selectTime(\\'h\\', $index)\\\">{{h}}</span></div><div class=\\\"w-scroll w-min-scroll\\\"><span class=\\\"u-time-cell\\\" ng-repeat=\\\"m in vmTp.minConf\\\" ng-class=\\\"{\\'selected\\': vmTp.minNow == $index}\\\" ng-click=\\\"vmTp.viewMethods.selectTime(\\'m\\', $index)\\\">{{m}}</span></div><div class=\\\"w-scroll w-sec-scroll\\\"><span class=\\\"u-time-cell\\\" ng-repeat=\\\"s in vmTp.secConf\\\" ng-class=\\\"{\\'selected\\': vmTp.secNow == $index}\\\" ng-click=\\\"vmTp.viewMethods.selectTime(\\'s\\', $index)\\\">{{s}}</span></div></div>\");}]);"],"file":"scripts/ngDatetimeRangePicker.js","sourceRoot":"/source/"}